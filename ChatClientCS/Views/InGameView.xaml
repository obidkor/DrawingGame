<UserControl x:Class="ChatClientCS.Views.InGameView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity" 
             xmlns:local="clr-namespace:ChatClientCS.Views"
             xmlns:data="clr-namespace:ChatClientCS.Data"
             xmlns:utils="clr-namespace:ChatClientCS.Utils"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:Converters="clr-namespace:MaterialDesignThemes.Wpf.Converters;assembly=MaterialDesignThemes.Wpf"             
             mc:Ignorable="d"
             d:DataContext="{d:DesignInstance IsDesignTimeCreatable=True, Type={x:Type data:SampleMainWindowViewModel}}"
             d:DesignHeight="698" d:DesignWidth="1366">
    <UserControl.Resources>

        <!--<Style x:Key="ImageButtonStyle" TargetType="Button" BasedOn="{StaticResource SendButtonStyle}">-->
        <Style x:Key="ImageButtonStyle" TargetType="Button">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid Background="#00000000">
                            <materialDesign:PackIcon Name="PhotoIcon" Kind="Image" SnapsToDevicePixels="True"
                                                     Foreground="{TemplateBinding Foreground}"
                                                     HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                     VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                     Margin="{TemplateBinding Padding}" Width="Auto" Height="Auto"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Foreground" TargetName="PhotoIcon" Value="{DynamicResource PrimaryHueMidBrush}"/>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="True">
                                <Setter Property="Foreground" TargetName="PhotoIcon" Value="{DynamicResource PrimaryHueMidBrush}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" Value="0.23"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ParticipantsListBoxItemStyle" TargetType="{x:Type ListBoxItem}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="HorizontalContentAlignment" 
                    Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="VerticalContentAlignment" 
                    Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="Padding" Value="2,0,0,0"/>
            <Setter Property="Margin" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                        <Border x:Name="Bd"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}" 
                                Background="{TemplateBinding Background}"
                                Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                            <ContentPresenter Grid.Column="1"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="true">
                                <Setter Property="Background" TargetName="Bd" Value="#E3F2FD"/>
                                <Setter Property="Foreground" 
                                        Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}}"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="true"/>
                                    <Condition Property="Selector.IsSelectionActive" Value="false"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="#E3F2FD"/>
                                <Setter Property="Foreground" 
                                        Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}}"/>
                            </MultiTrigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <DataTemplate x:Key="ParticipantsDataTemplate">
            <Border BorderThickness="0,0,0,1" BorderBrush="{DynamicResource MaterialDesignDivider}"
                    Width="{Binding Path=ActualWidth, RelativeSource={RelativeSource FindAncestor, AncestorType=ListBoxItem}}"
                    Height="50" Margin="-2,0,0,0">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="5"/>
                        <ColumnDefinition Width="50"/>
                        <ColumnDefinition/>
                        <ColumnDefinition Width="20"/>
                        <ColumnDefinition Width="20"/>
                        <ColumnDefinition Width="30"/>
                    </Grid.ColumnDefinitions>
                    <Rectangle x:Name="ParticipantRct" Fill="{DynamicResource PrimaryHueMidBrush}"
                               Visibility="Hidden"/>
                    <!--Pic-->
                    <Grid Grid.Column="1" Margin="6" SnapsToDevicePixels="True">
                        <Grid.OpacityMask>
                            <VisualBrush Visual="{Binding ElementName=ClipEllipse}"/>
                        </Grid.OpacityMask>
                        <Ellipse x:Name="ClipEllipse" Fill="White"/>
                        <materialDesign:PackIcon Kind="AccountCircle" SnapsToDevicePixels="True" Width="Auto" Height="Auto"
                                                 Margin="-4" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
                        <Image Source="{Binding Photo, Converter={StaticResource ByteBmpSrcConverter},
                            TargetNullValue={StaticResource BlankImage}}" Stretch="UniformToFill"/>
                    </Grid>
                    <!--Name-->
                    <TextBlock Grid.Column="2" VerticalAlignment="Center" HorizontalAlignment="Left"
                               Margin="5,0" FontWeight="SemiBold" TextTrimming="CharacterEllipsis"
                               Text="{Binding Name}" SnapsToDevicePixels="True"/>
                    <!--New Message icon-->
                    <materialDesign:PackIcon Name="NewMessageIcon" Grid.Column="3" SnapsToDevicePixels="True"
                                             VerticalAlignment="Center" HorizontalAlignment="Center"
                                             Kind="MessageReplyText" Opacity="0.7" Visibility="Hidden"/>
                    <!--Typing icon-->
                    <materialDesign:PackIcon Name="TypingIcon" Grid.Column="3" SnapsToDevicePixels="True"
                                             VerticalAlignment="Center" HorizontalAlignment="Center"
                                             Kind="Feather" Opacity="0.8" Visibility="Hidden"/>

                    <!--Online-->
                    <Ellipse Grid.Column="4" VerticalAlignment="Center" HorizontalAlignment="Center" 
                             Width="8" Height="8">
                        <Ellipse.Style>
                            <Style TargetType="Ellipse">
                                <Setter Property="Fill" Value="#F44336"/>
                                <Style.Triggers>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding DataContext.IsConnected, 
                                                RelativeSource={RelativeSource FindAncestor, AncestorType=UserControl}}" Value="True"/>
                                            <Condition Binding="{Binding IsLoggedIn}" Value="True"/>
                                        </MultiDataTrigger.Conditions>
                                        <MultiDataTrigger.Setters>
                                            <Setter Property="Fill" Value="#64DD17"/>
                                        </MultiDataTrigger.Setters>
                                    </MultiDataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Ellipse.Style>
                    </Ellipse>
                    <!--Score-->
                    <StackPanel Grid.Column="5" Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Center">
                        <TextBlock Text="{Binding Score}" FontSize="20" FontWeight="SemiBold" TextTrimming="CharacterEllipsis" SnapsToDevicePixels="True"/>
                        <TextBlock Text="점" FontSize="20" FontWeight="SemiBold" TextTrimming="CharacterEllipsis" SnapsToDevicePixels="True"/>
                    </StackPanel>
                </Grid>
            </Border>
            <DataTemplate.Triggers>
                <DataTrigger Binding="{Binding HasSentNewMessage}" Value="True">
                    <Setter TargetName="NewMessageIcon" Property="Visibility" Value="Visible"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding IsTyping}" Value="True">
                    <Setter TargetName="NewMessageIcon" Property="Visibility" Value="Hidden"/>
                    <Setter TargetName="TypingIcon" Property="Visibility" Value="Visible"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding Path=IsSelected,
                    RelativeSource={RelativeSource FindAncestor, AncestorType=ListBoxItem}}" Value="true">
                    <Setter Property="Visibility" TargetName="ParticipantRct" Value="Visible"/>
                </DataTrigger>
            </DataTemplate.Triggers>
        </DataTemplate>

        <DataTemplate x:Key="MessagesDataTemplate">
            <!--다른사람의 메시지 출력-->
            <Border Name="MessageBorder" MinHeight="40" MinWidth="280" BorderThickness="1" Background="#EFEBE9" 
                    Margin="10,0,60,10" BorderBrush="#BCAAA4" CornerRadius="4" SnapsToDevicePixels="True"
                    HorizontalAlignment="Left">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition Height="15"/>
                    </Grid.RowDefinitions>
                    <TextBlock Grid.Row="0" Margin="7,5,7,0" TextWrapping="Wrap" 
                               VerticalAlignment="Stretch" HorizontalAlignment="Stretch" FontWeight="Bold"
                               Text="{Binding Author}"/>
                    <TextBlock x:Name="MessageTxtBlock" Grid.Row="1" Margin="7,5,7,0" TextWrapping="Wrap" 
                               VerticalAlignment="Stretch" HorizontalAlignment="Stretch" 
                               Text="{Binding Message}"/>
                    <TextBlock Grid.Row="2" HorizontalAlignment="Right" VerticalAlignment="Stretch"
                               Margin="0,0,5,0" FontSize="10" Opacity="0.8"
                               Text="{Binding Time, StringFormat={}{0:t}}"/>
                </Grid>
            </Border>
            <!--내 메시지 출력-->
            <DataTemplate.Triggers>
                <DataTrigger Binding="{Binding IsOriginNative}" Value="True">
                    <Setter TargetName="MessageBorder" Property="HorizontalAlignment" Value="Right"/>
                    <Setter TargetName="MessageBorder" Property="Margin" Value="60,0,10,10"/>
                    <Setter TargetName="MessageBorder" Property="Background" Value="#BBDEFB"/>
                    <Setter TargetName="MessageBorder" Property="BorderBrush" Value="#64B5F6"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding Message}" Value="{x:Null}">
                    <Setter TargetName="MessageTxtBlock" Property="Visibility" Value="Collapsed"/>
                    <Setter TargetName="MessageBorder" Property="MaxWidth" Value="320"/>
                </DataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding Message}" Value="{x:Null}"/>
                        <Condition Binding="{Binding IsOriginNative}" Value="True"/>
                    </MultiDataTrigger.Conditions>
                    <MultiDataTrigger.Setters>
                        <Setter TargetName="MessageBorder" Property="Margin" Value="0,0,10,10"/>
                        <Setter TargetName="MessageBorder" Property="HorizontalAlignment" Value="Right"/>
                    </MultiDataTrigger.Setters>
                </MultiDataTrigger>
            </DataTemplate.Triggers>
        </DataTemplate>

    </UserControl.Resources>
    <Grid Background="MistyRose">
        <Grid.ColumnDefinitions>
            <ColumnDefinition/>
            <ColumnDefinition Width="300" />
        </Grid.ColumnDefinitions>
        <Grid Grid.Column="0">

            <Grid.RowDefinitions>
                <RowDefinition Height="70"/>
                <RowDefinition Height="5*"/>
                <RowDefinition Height="2*"/>
                <RowDefinition Height="65" />
            </Grid.RowDefinitions>

            <!-- 점수판 -->
            <Border Grid.Row="0" Grid.Column="0" Background="White" BorderBrush="Red" BorderThickness="5" Margin="15,0,15,5" CornerRadius="30" >
                <StackPanel Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Center">
                    <TextBlock Text="정답 : " VerticalAlignment="Center" HorizontalAlignment="Center" FontSize="30" FontFamily="HYPOST" TextAlignment="Center" />
                    <TextBox Text="{Binding CurrentAnswer, TargetNullValue = 게임 시작 전입니다.}" FontSize="30" FontFamily="HYPOST" TextAlignment="Center" />
                </StackPanel>
            </Border>

            <!--알림메시지-->
            <TextBlock Grid.Row="1" Panel.ZIndex="1" VerticalAlignment="Center" HorizontalAlignment="Center" Text="{Binding NotiMsg}" FontSize="40"/>
            <!--그림판-->
            <Border Grid.Row="1" Grid.Column="1" Background="White" BorderBrush="Black" BorderThickness="5" Margin="15,0,15,5">
                <Grid>
                    <InkCanvas x:Name="MainCanvas" Strokes="{Binding Strokes, UpdateSourceTrigger=PropertyChanged}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="StrokeCollected">
                                <i:InvokeCommandAction Command="{Binding StrokeCanvasCommand}" CommandParameter="{Binding ElementName=MainCanvas, Path=Strokes}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </InkCanvas>
                    <Expander x:Name="Pallet" HorizontalAlignment="Right" ExpandDirection="Right" Background="GhostWhite">
                        <DockPanel>
                            <StackPanel DockPanel.Dock="Bottom" Margin="10,0,0,0">
                                <StackPanel.Resources>
                                    <Style x:Key="Thickness" TargetType="RadioButton">
                                        <Style.Triggers>
                                            <Trigger Property="IsChecked" Value="False">
                                                <Setter Property="Opacity" Value="0.1"/>
                                            </Trigger>
                                        </Style.Triggers>
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="RadioButton">
                                                    <StackPanel>
                                                        <Rectangle Stroke="Transparent" Width="150" Height="16"/>
                                                        <Line Stroke="Black" X1="0" X2="150" Y1="-8" Y2="-8" 
                                              StrokeThickness="{Binding Path=Content, RelativeSource={RelativeSource TemplatedParent}}"/>
                                                    </StackPanel>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </StackPanel.Resources>
                                <ItemsControl>
                                    <RadioButton Name="Thin" Style="{StaticResource Thickness}" Width="150"  Content="3" Checked="Thin_OnChecked" IsChecked="True"/>
                                    <RadioButton Name="Middle" Style="{StaticResource Thickness}" Content="5" Checked="Middle_OnChecked"/>
                                    <RadioButton Name="Thick" Style="{StaticResource Thickness}" Content="10" Checked="Thick_OnChecked"/>
                                </ItemsControl>
                                <Button Height="30" Margin="0,10,0,0" Content="Clear" Click="ClearBtn_OnClick"/>
                            </StackPanel>
                            <WrapPanel Margin="10,0,0,0">
                                    <WrapPanel.Resources>
                                        <Style x:Key="Ink" TargetType="RadioButton">
                                            <Style.Triggers>
                                                <Trigger Property="IsChecked" Value="False">
                                                    <Setter Property="Opacity" Value="0.1"/>
                                                </Trigger>
                                            </Style.Triggers>
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="RadioButton">
                                                        <Ellipse x:Name="InkEllipse" Width="50" Height="50" Margin="5" Stroke="Black"
                                                                 Fill="{Binding Path=Content, RelativeSource={RelativeSource TemplatedParent}}"/>
                                                        <ControlTemplate.Triggers>
                                                            <Trigger Property="RadioButton.IsChecked" Value="True">
                                                                <Setter TargetName="InkEllipse" Property="StrokeThickness" Value="1"/>
                                                            </Trigger>
                                                            <Trigger Property="RadioButton.IsChecked" Value="False">
                                                                <Setter TargetName="InkEllipse" Property="StrokeThickness" Value="0"/>
                                                            </Trigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </WrapPanel.Resources>
                                    <ItemsControl>
                                        <ItemsControl.ItemsPanel>
                                            <ItemsPanelTemplate>
                                                <WrapPanel Orientation="Vertical"/>
                                            </ItemsPanelTemplate>
                                        </ItemsControl.ItemsPanel>
                                        <RadioButton Name="Black" Style="{StaticResource Ink}" IsChecked="True" Checked="Black_OnChecked">
                                            <SolidColorBrush Color="Black"/>
                                        </RadioButton>
                                        <RadioButton Name="Red" Style="{StaticResource Ink}" Checked="Red_OnChecked">
                                            <SolidColorBrush Color="Red"/>
                                        </RadioButton>
                                        <RadioButton Name="Blue" Style="{StaticResource Ink}" Checked="Blue_OnChecked">
                                            <SolidColorBrush Color="Blue"/>
                                        </RadioButton>
                                        <RadioButton Name="Green" Style="{StaticResource Ink}" Checked="Green_OnChecked">
                                            <SolidColorBrush Color="Green"/>
                                        </RadioButton>
                                        <RadioButton Name="Yellow" Style="{StaticResource Ink}" Checked="Yellow_OnChecked">
                                            <SolidColorBrush Color="Yellow"/>
                                        </RadioButton>
                                        <RadioButton Name="White" Style="{StaticResource Ink}" Checked="White_OnChecked">
                                            <SolidColorBrush Color="White"/>
                                        </RadioButton>
                                    </ItemsControl>
                                </WrapPanel>
                        </DockPanel>
                    </Expander>

                </Grid>
            </Border>


            <!--메시지 로그-->
            <Border Grid.Row="2" Grid.Column="0" Background="White" BorderBrush="DarkGoldenrod" BorderThickness="5" Margin="15,0,15,5" CornerRadius="0" >
                <ItemsControl x:Name="MessagesItemsCtrl" Grid.Row="1" Grid.Column="1" Margin="0,5,0,0" 
                      ItemsSource="{Binding ChatLog}" 
                      ItemTemplate="{DynamicResource MessagesDataTemplate}"
                      ScrollViewer.VerticalScrollBarVisibility="Auto">
                    <i:Interaction.Behaviors>
                        <utils:BringNewItemIntoViewBehavior/>
                    </i:Interaction.Behaviors>
                    <ItemsControl.Template>
                        <ControlTemplate TargetType="ItemsControl">
                            <ScrollViewer>
                                <ItemsPresenter/>
                            </ScrollViewer>
                        </ControlTemplate>
                    </ItemsControl.Template>
                </ItemsControl>
            </Border>
            
            <!--메시지 입력창-->
            <Border Grid.Row="3" Grid.Column="0" >
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition Width="150"/>
                    </Grid.ColumnDefinitions>
                    <Border Grid.Column="0" Background="White" BorderBrush="DarkGoldenrod" BorderThickness="5" Margin="15,0,0,10" CornerRadius="30,0,0,30">
                        <TextBox  Text="{Binding TextMessage, UpdateSourceTrigger=PropertyChanged}" Height="40" VerticalAlignment="Center" HorizontalAlignment="Stretch" FontSize="30" FontFamily="HYPOST" TextAlignment="Right" Margin="50,0,10,0">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="KeyUp">
                                    <i:InvokeCommandAction Command="{Binding TypingCommand}"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                            <TextBox.InputBindings>
                                <KeyBinding Command="{Binding SendTextMessageCommand}" Key="Enter"/>
                            </TextBox.InputBindings>
                        </TextBox>
                    </Border>
                    <Border Grid.Column="2" >
                        <Button Margin="5,0,15,10" FontFamily="HYPOST" Command="{Binding SendTextMessageCommand}">
                            <Button.Style>
                                <Style TargetType="{x:Type Button}">
                                    <!-- Button Setters -->
                                    <Setter Property="FontSize" Value="35"/>
                                    <Setter Property="Background" Value="DarkGoldenrod"/>
                                    <Setter Property="Foreground" Value="White"/>
                                    <Setter Property="FontWeight" Value="Bold"/>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type Button}">
                                                <Grid Cursor="Hand">
                                                    <Border Background="{TemplateBinding Background}" CornerRadius="0,30,30,0" >
                                                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" Content="전송"/>
                                                    </Border>
                                                </Grid>
                                                <ControlTemplate.Triggers >
                                                    <Trigger Property="IsPressed" Value="True">
                                                        <Setter Property="Foreground" Value="White"/>
                                                        <Setter Property="Background" Value="#FF6A4C01"/>
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </Button.Style>
                        </Button>
                    </Border>
                </Grid>
            </Border>

        </Grid>
        <Grid Grid.Column="1">
            <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition Height="200" />
            </Grid.RowDefinitions>
            
            <!--사용자 리스트-->
            <Border CornerRadius ="100">
                <ListBox ItemsSource="{Binding Participants}" 
                         ItemTemplate="{DynamicResource ParticipantsDataTemplate}"
                         ItemContainerStyle="{DynamicResource ParticipantsListBoxItemStyle}"
                         SelectedItem="{Binding SelectedParticipant}"                     
                         ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                         ScrollViewer.VerticalScrollBarVisibility="Auto"
                         Background="AliceBlue"
                         />
            </Border>
            <Grid Grid.Row="1">
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                
                <!--시작하기 버튼-->
                <Border Grid.Row="0" Background="DarkRed" Margin="0,0,15,5" CornerRadius="30"/>
                <Button Grid.Row="0" Margin="10,10,25,15" FontFamily="HYPOST" Command="{Binding BeginGameCommand}">
                    <Button.Style>
                        <Style TargetType="{x:Type Button}">
                            <!-- Button Setters -->
                            <Setter Property="FontSize" Value="40"/>
                            <Setter Property="Background" Value="LightGoldenrodYellow"/>
                            <Setter Property="Foreground" Value="DarkGreen"/>
                            <Setter Property="FontWeight" Value="Bold"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type Button}">
                                        <Grid Cursor="Hand">
                                            <Border Background="{TemplateBinding Background}" CornerRadius="30" BorderBrush="Black" BorderThickness="5">
                                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" Content="시작하기"/>
                                            </Border>
                                        </Grid>
                                        <!-- Triggers -->
                                        <ControlTemplate.Triggers >
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="Foreground" Value="LightGoldenrodYellow"/>
                                                <Setter Property="Background" Value="#FF213221"/>
                                                <Setter Property="FontSize" Value="40"/>
                                            </Trigger>
                                            <Trigger Property="IsPressed" Value="True">
                                                <Setter Property="FontSize" Value="45"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </Button.Style>
                </Button>
                
                <!---나가기 버튼-->
                <Border Grid.Row="1" Background="DarkRed" Margin="0,0,15,5" CornerRadius="30"/>
                <Button Grid.Row="1" Margin="10,10,25,15" FontFamily="HYPOST">
                    <Button.Style>
                        <Style TargetType="{x:Type Button}">
                            <!-- Button Setters -->
                            <Setter Property="FontSize" Value="40"/>
                            <Setter Property="Background" Value="Pink"/>
                            <Setter Property="Foreground" Value="DarkRed"/>
                            <Setter Property="FontWeight" Value="Bold"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type Button}">
                                        <Grid Cursor="Hand">
                                            <Border Background="{TemplateBinding Background}" CornerRadius="30" BorderBrush="Black" BorderThickness="5">
                                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" Content="나가기"/>
                                            </Border>
                                        </Grid>
                                        <!-- Triggers -->
                                        <ControlTemplate.Triggers >
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="Foreground" Value="pink"/>
                                                <Setter Property="Background" Value="#FF510707"/>
                                            </Trigger>
                                            <Trigger Property="IsPressed" Value="True">
                                                <Setter Property="FontSize" Value="45"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </Button.Style>
                </Button>
            </Grid>


        </Grid>

        <MediaElement LoadedBehavior="Play" x:Name="MainBackground" UnloadedBehavior="Manual" Volume="1" Source="{Binding MainSound}" Width="0" Height="0" MediaEnded="MainSound_Ended"/>
        <MediaElement LoadedBehavior="Play"  UnloadedBehavior="Manual" Volume="1" Source="{Binding Effect}" Width="0" Height="0"/>
    </Grid>
</UserControl>
